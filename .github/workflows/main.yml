on: [push]
name: test-app deploy into Azure Container App
 
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/nodeapp2:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/nodeapp2:${{ github.sha }}
        - name: Deploy to Azure Container Apps
          run: |
            # Determine the current environment (blue or green)
            CURRENT_ENV=$(az containerapp show --name bgdfinal --resource-group ACRforNODEJSapp-RG --query 'properties.activeRevisionName' -o tsv)
              # Set the new environment based on the current environment
             if [ "$CURRENT_ENV" == "blue" ]
             then
              NEW_ENV="green"
            else
             NEW_ENV="blue"
            fi
             # Deploy the new version to the new environment
            az containerapp update --name bgdfinal --resource-group ACRforNODEJSapp-RG --revision $NEW_ENV --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/nodeapp2:${{ github.sha }}
             # Test the new environment...

             # If tests pass, switch traffic to the new environment
            az containerapp ingress traffic set --name bgdfinal --resource-group ACRforNODEJSapp-RG --revision-weight $NEW_ENV=100

             # Deactivate the old environment
            az containerapp revision deactivate --name bgdfinal --resource-group ACRforNODEJSapp-RG --revision $CURRENT_ENV

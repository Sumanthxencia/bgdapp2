on: [push]
name: test-app deploy into Azure Container App
 
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/nodeapp2:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/nodeapp2:${{ github.sha }}
        - name: Deploy to Azure Container Apps
          run: |
            if [[ "$(az containerapp revision list --name bgdfinal --resource-group ACRforNODEJSapp-RG --query "length([?trafficWeight=='100'])")" == "1" ]]
            then
               export ENV=green
            else
               export ENV=blue
            fi
            	latest_revision=$(az containerapp revision list --name bgdfinal --resource-group ACRforNODEJSapp-RG --query "[?trafficWeight=='100'].name | [0]" --output tsv)
            # Deploy the new version
             az containerapp update --name bgdfinal --resource-group ACRforNODEJSapp-RG --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/nodeapp2:${{ github.sha }} --set-env-vars $ENV=latest_revision
            # Add label to the latest revision
            az containerapp revision label add --name bgdfinal --resource-group ACRforNODEJSapp-RG --label $ENV --revision $latest_revision
            # If tests pass, switch traffic to the new version
            az containerapp ingress traffic set --name bgdfinal --resource-group ACRforNODEJSapp-RG --label-weight $ENV=100
